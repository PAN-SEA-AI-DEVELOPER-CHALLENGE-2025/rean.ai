"""add_lecture_title_to_lecture_summaries

Revision ID: 3b27f36b85e4
Revises: 17e4e8bb8a7a
Create Date: 2025-09-07 14:38:42.137278

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3b27f36b85e4'
down_revision: Union[str, Sequence[str], None] = '17e4e8bb8a7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('audio_s3_key_key'), 'audio', type_='unique')
    op.drop_index(op.f('idx_audio_class_id'), table_name='audio')
    op.drop_index(op.f('idx_audio_s3_key'), table_name='audio')
    op.create_index(op.f('ix_audio_class_id'), 'audio', ['class_id'], unique=False)
    op.create_index(op.f('ix_audio_s3_key'), 'audio', ['s3_key'], unique=True)
    # Add lecture_title column with a default value for existing records
    op.add_column('lectures_summaries', sa.Column('lecture_title', sa.String(length=255), nullable=True))
    # Update existing records with a default lecture title
    op.execute("UPDATE lectures_summaries SET lecture_title = 'Lecture Summary' WHERE lecture_title IS NULL")
    # Now make the column non-nullable
    op.alter_column('lectures_summaries', 'lecture_title', nullable=False)
    op.drop_index(op.f('idx_refresh_tokens_token'), table_name='refresh_tokens')
    op.drop_index(op.f('idx_refresh_tokens_user_id'), table_name='refresh_tokens')
    op.drop_constraint(op.f('refresh_tokens_token_key'), 'refresh_tokens', type_='unique')
    op.create_index(op.f('ix_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_refresh_tokens_token'), table_name='refresh_tokens')
    op.create_unique_constraint(op.f('refresh_tokens_token_key'), 'refresh_tokens', ['token'])
    op.create_index(op.f('idx_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False)
    op.create_index(op.f('idx_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=False)
    op.drop_column('lectures_summaries', 'lecture_title')
    op.drop_index(op.f('ix_audio_s3_key'), table_name='audio')
    op.drop_index(op.f('ix_audio_class_id'), table_name='audio')
    op.create_index(op.f('idx_audio_s3_key'), 'audio', ['s3_key'], unique=False)
    op.create_index(op.f('idx_audio_class_id'), 'audio', ['class_id'], unique=False)
    op.create_unique_constraint(op.f('audio_s3_key_key'), 'audio', ['s3_key'])
    # ### end Alembic commands ###
