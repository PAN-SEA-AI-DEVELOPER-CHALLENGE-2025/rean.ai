"""remove_class_fields_and_rename_title_to_code

Revision ID: 213242fe231d
Revises: 931c31238dcb
Create Date: 2025-09-07 16:09:15.230628

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '213242fe231d'
down_revision: Union[str, Sequence[str], None] = '931c31238dcb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add the new class_code column as nullable first
    op.add_column('classes', sa.Column('class_code', sa.String(length=255), nullable=True))
    
    # Copy data from title to class_code
    op.execute("UPDATE classes SET class_code = title WHERE class_code IS NULL")
    
    # Make class_code non-nullable
    op.alter_column('classes', 'class_code', nullable=False)
    
    # Drop the old columns
    op.drop_column('classes', 'classroom')
    op.drop_column('classes', 'end_time')
    op.drop_column('classes', 'title')
    op.drop_column('classes', 'start_time')
    op.drop_column('classes', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add the old columns back
    op.add_column('classes', sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('classes', sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('classroom', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    
    # Copy data from class_code to title
    op.execute("UPDATE classes SET title = class_code WHERE title IS NULL")
    
    # Make title non-nullable
    op.alter_column('classes', 'title', nullable=False)
    
    # Drop the class_code column
    op.drop_column('classes', 'class_code')
    # ### end Alembic commands ###
