[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "voice-scraping-n-segmentation"
version = "2.0.0"
description = "A comprehensive API for Khmer voice processing, scraping, and segmentation with advanced ML capabilities"
readme = "README.md"
requires-python = ">=3.9,<3.13"
authors = [
    { name = "Pan-Sea Team" },
]

dependencies = [
    # Core web framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.5.0",
    "python-jose[cryptography]>=3.3.0",
    "httpx>=0.24.0,<0.26.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    
    # Audio extraction and processing
    "yt-dlp>=2023.10.13",
    "librosa>=0.10.1",
    "soundfile>=0.12.1",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "ffmpeg-python>=0.2.0",
    "pydub>=0.25.1",
    
    # Voice processing and ML
    "webrtcvad>=2.0.10",
    "openai-whisper>=20231117",
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "speechbrain>=0.5.15",
    
    # Data processing and storage
    "pandas>=2.0.0",
    "boto3>=1.34.0",
    "botocore>=1.34.0",

    "textgrid"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

mfa = [
    # Note: MFA may need to be installed separately via conda or pip
    # See: https://montreal-forced-alignment.readthedocs.io/
    "praatio>=6.0.0",
    "textgrid>=1.5",
]

test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
    "pytest-mock>=3.10.0",
]

[tool.hatch.build.targets.wheel]
packages = ["config", "router", "service", "examples"]

